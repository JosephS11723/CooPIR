version: "3.8"

services:

  # Allows quick access to the mongo database
  # REMOVE BEFORE DEPLOYMENT
  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_SERVER: mongoDB
      # ME_CONFIG_BASICAUTH_USERNAME: admin
      # ME_CONFIG_BASICAUTH_PASSWORD: q
      ME_CONFIG_MONGODB_PORT: 27017
      ME_CONFIG_MONGODB_ADMINUSERNAME: test
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
    links:
      - mongo-db
    networks:
      hostnetwork:
        ipv4_address: 20.20.20.20
      network1:
        ipv4_address: 10.10.10.20

  # mongo database
  mongo-db:
    container_name: mongoDB
    build: ./mongo
    environment:
      MONGO_INITDB_DATABASE: testingdb
      MONGO_INITDB_ROOT_USERNAME: test
      MONGO_INITDB_ROOT_PASSWORD: example
    ports:
      - 27017:27017
    volumes:
      - mongodb-data:/data/db
    networks:
      network1:
        ipv4_address: 10.10.10.3

  # ftp server
  ftp_server:
    container_name: ftp_server
    build: ./ftp
    ports:
      - "21:21"
      - "21000-21010:21000-21010"
    environment:
      - USERS=api|password
    networks:
      network1:
        ipv4_address: 10.10.10.2


  # go api
  api_server:
    container_name: api_server
    build: ./src/api
    ports:
      - target: 8080
        published: 8080
        protocol: tcp

    networks:
      hostnetwork:
        ipv4_address: 20.20.20.4
      network1:
        ipv4_address: 10.10.10.4

volumes:
  # mongodb persistant storage
  mongodb-data:
  

networks:
  # this is for the api to communicate with the outside world
  hostnetwork:
    internal: false
    ipam:
      config: 
        - subnet: 20.20.20.0/24
  
  # this is for the api to communicate with the internal services
  network1:
    internal: true
    ipam:
      config: 
        - subnet: 10.10.10.0/24
